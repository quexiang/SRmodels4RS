# general settings
# python basicsr/train.py -opt options/train/ESRGAN/train_ESRGAN_x4.yml
name: 052_ESRGAN_x4_NIRRGB_4_2085
model_type: ESRGANModel
scale: 4
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 0
high_order_degradation: False
l1_gt_usm: True
percep_gt_usm: True
gan_gt_usm: False 
# dataset and data loader settings
datasets:
  train:
    name: TIF
    type: RealESRGANPairedDataset_hy
    dataroot_gt: Data/Mangroves/Paired_H_L_images
    dataroot_lq: Data/Mangroves/Paired_H_L_images
    meta_info: Data/Mangroves/Paired_H_L_images/meta_info_train.txt
    io_backend:
      type: disk

    gt_size: 256
    use_hflip: True
    use_rot: True

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 6
    batch_size_per_gpu: 12
    dataset_enlarge_ratio: 100
    prefetch_mode: ~

  val:
    name: TIF
    type: RealESRGANPairedDataset_hy
    dataroot_gt: Data/Mangroves/Paired_H_L_images
    dataroot_lq: Data/Mangroves/Paired_H_L_images
    meta_info: Data/Mangroves/Paired_H_L_images/meta_info_val.txt
    io_backend:
      type: disk

# network structures
network_g:
  type: RRDBNet
  num_in_ch: 4
  num_out_ch: 4
  num_feat: 64
  num_block: 23

network_d:
  type: VGGStyleDiscriminator
  num_in_ch: 4
  num_feat: 64

# path
path:
  #pretrain_network_g: experiments/RRDBNet_x4/models/net_g_1000000.pth
  param_key_g: params_ema
  strict_load_g: true
  resume_state: ~
  pretrain_network_d: ~
  param_key_d: params
  strict_load_d: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]
    momentum: ~
  optim_d:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]
    momentum: ~

  scheduler:
    type: MultiStepLR
    milestones: [50000, 100000, 200000, 300000]
    gamma: 0.5

  total_iter: 100000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: !!float 1e-2
    reduction: mean
  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      'conv5_4': 1  # before relu
    vgg_type: vgg19
    use_input_norm: true
    range_norm: false
    perceptual_weight: 1.0
    style_weight: 0
    criterion: l1
  gan_opt:
    type: GANLoss
    gan_type: vanilla
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: !!float 5e-3

  net_d_iters: 1
  net_d_init_iters: 0

# validation settings
val:
  val_freq: !!float 1e3 #5e3
  save_img: false

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4
      test_y_channel: false
    ssim:
      type: calculate_ssim
      crop_border: 4
      test_y_channel: false

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
